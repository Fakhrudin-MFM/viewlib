<%
const escapedId = id.replace(/(:|\.|\[|\]|,|=|@)/g, '_');
%>
<% script(`${module}/viewlib-static/js/ajax-uploader-scan.js`) -%>
<% script(`${module}/viewlib-static/js/scan.js`) -%>
<% stylesheet(`${module}/viewlib-static/css/scan.css`) -%>

<%
   let opts = Object.assign({}, {maxFiles: 10}, field.options)
%>
<div id="block_<%= escapedId %>" class="form-group <%= field.required?"required":"" %> <%=cssFromTags(field)%>"
     style="<%=styleFromTags(field)%>" data-type="multifile" data-prop="<%= JSON.stringify(field) %>">
  <label for="<%= id %>" class="col-md-2 col-sm-3 control-label"><%= field.caption %></label>
  <div class="col-sm-9 col-md-10">
    <button type="button" class="btn btn-default scan-btn">Scan</button>
    <button type="button" class="btn btn-default uploader-btn">Load</button>
    <%
    var files = prop.getValue();
    if (!Boolean(files))
      files = []
    if (typeof files !== 'object')
      files = []
    if (!Array.isArray(files)) {
      files = [files]
    }
    var fileIds = [];
    for (var i = 0; i < files.length; i++) {
      fileIds.push(files[i].id);
    }
    if (fileIds.length === 0) {
      fileIds = ''
    } else if (fileIds.length === 1) {
      fileIds = fileIds[0]
    } else if (fileIds.length > 1) {
      fileIds = JSON.stringify(fileIds)
    }
    %>
    <input type="hidden" id="<%= id %>"
           value="<%=fileIds%>"
           name="<%= prop.getName() %>"
           class="attr-value">
    <div class="scan-uploader" data-options=<%=JSON.stringify(opts)%>
      <% if (item.getItemId()) { %>
         data-url="<%=module%>/api/upload/<%= item.getClassName() %>/<%= item.getItemId() %>"
      <% } else { %>
         data-url="<%=module%>/api/upload/<%= item.getClassName() %>"
      <% } %>
         data-attr="<%=prop.getName()%>">
      <input type="file" class="scan-input-file">
      <div class="uploader-overflow">Too many files</div>
      <div class="uploader-list clearfix">
        <div class="uploader-item pending sample">
          <div class="uploader-thumb"><div></div></div>
          <div class="uploader-signs">
            <div class="uploader-sign-pending fa fa-refresh fa-spin"></div>
            <div class="uploader-sign-processing fa fa-refresh fa-spin"></div>
            <div class="uploader-sign-done glyphicon glyphicon-ok"></div>
            <div class="uploader-sign-failed glyphicon glyphicon-ban-circle"></div>
          </div>
          <div class="uploader-remove" title="Delete"><span class="glyphicon glyphicon-remove"></span></div>
          <div class="uploader-info">
            <div class="uploader-filename">File</div>
            <div class="progress progress-xxs"><div class="progress-bar"></div></div>
            <div class="uploader-message">Waiting for review ...</div>
          </div>
        </div>
      </div>
    </div>
    <div class="scan-holder">
      <%
      for (var j = 0; j < files.length; j++) {
      %>
      <div data-fileid="<%=files[j].id%>" class="form-control-static file-frame">
        <a href="<%= files[j].link %>" target="_blank" class="file-frame-title">
          <img src="<%=files[j].link%>" alt="<%=files[j].name%>"></a>
        <span class="remove-btn glyphicon glyphicon-remove text-danger ml10" title="Delete file"></span>
      </div>
      <% } %>
    </div>

    <p class="error-block"></p>
  </div>
</div>
<script>
  $(function() {
    let $scanGroup = $('#block_<%= escapedId %>');
    let $propInput = $scanGroup.find('.attr-value');
    let $uploaders = $scanGroup.find('.scan-uploader');
    let $holder = $scanGroup.find('.scan-holder');
    let $scanBtn = $scanGroup.find('.scan-btn');
    let $uploadBtn = $scanGroup.find('.uploader-btn');
    $scanBtn.click(function () {
      $uploaders.trigger('uploader.scan');
    })
    $uploadBtn.click(function () {
      $uploaders.trigger('uploader.upload');
    })
    $uploaders.ajaxScanUploader($propInput, {fileAttrName: "<%= prop.getName() %>"});
    $holder.thumbnailCollection([], $propInput);
    let removeBtns = $holder.find('.remove-btn');
    removeBtns.each(function(_, jQobj){
      $(jQobj).on('click', function () {
        let frame = $(this).parent();
        $propInput.trigger('attr.apply', [frame.data('fileid'), false]);
        frame.remove();
      })
    });
    $propInput.on('attr.apply', function (event, data, add) {
      let old = null;
      let val = $(this).val();
      try {
        old = JSON.parse(val);
      } catch (err) {
      }
      if (!Array.isArray(old))
        old = val;
      if (!old) {
        old = [];
      }
      if (!Array.isArray(old)) {
        old = [old];
      }
      let id = (typeof data === 'object') ? data.id : data;
      if (add) {
        old.push(id);
      } else {
        var ind = old.indexOf(id);
        if (ind >= 0) {
          old.splice(ind, 1);
        }
      }
      $(this).val(JSON.stringify(old));
      $(this).trigger('change');
    })
  })
</script>
